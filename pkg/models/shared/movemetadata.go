// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type MoveMetaData struct {
	Ailment NamedAPIResource `json:"ailment"`
	// The chance of the target being inflicted with the status condition ailment.
	AilmentChance *int64           `json:"ailment_chance,omitempty"`
	Category      NamedAPIResource `json:"category"`
	// Critical hit rate bonus.
	CritRate *int64 `json:"crit_rate,omitempty"`
	// The amount of hp gained by the attacking Pokemon when it uses this move.
	Drain *int64 `json:"drain,omitempty"`
	// The chance of the target flinching when hit by this move.
	FlinchChance *int64 `json:"flinch_chance,omitempty"`
	// The amount of hp gained by the target Pokemon when it receives this move.
	Healing *int64 `json:"healing,omitempty"`
	// The maximum number of times this move hits. Null if it always only hits once.
	MaxHits *int64 `json:"max_hits,omitempty"`
	// The maximum number of turns this move continues to take effect. Null if it always only lasts one turn.
	MaxTurns *int64 `json:"max_turns,omitempty"`
	// The minimum number of times this move hits. Null if it always only hits once.
	MinHits *int64 `json:"min_hits,omitempty"`
	// The minimum number of turns this move continues to take effect. Null if it always only lasts one turn.
	MinTurns *int64 `json:"min_turns,omitempty"`
	// The chance of the attacking Pokemon lowering the target's stat.
	StatChance *int64 `json:"stat_chance,omitempty"`
}

func (o *MoveMetaData) GetAilment() NamedAPIResource {
	if o == nil {
		return NamedAPIResource{}
	}
	return o.Ailment
}

func (o *MoveMetaData) GetAilmentChance() *int64 {
	if o == nil {
		return nil
	}
	return o.AilmentChance
}

func (o *MoveMetaData) GetCategory() NamedAPIResource {
	if o == nil {
		return NamedAPIResource{}
	}
	return o.Category
}

func (o *MoveMetaData) GetCritRate() *int64 {
	if o == nil {
		return nil
	}
	return o.CritRate
}

func (o *MoveMetaData) GetDrain() *int64 {
	if o == nil {
		return nil
	}
	return o.Drain
}

func (o *MoveMetaData) GetFlinchChance() *int64 {
	if o == nil {
		return nil
	}
	return o.FlinchChance
}

func (o *MoveMetaData) GetHealing() *int64 {
	if o == nil {
		return nil
	}
	return o.Healing
}

func (o *MoveMetaData) GetMaxHits() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxHits
}

func (o *MoveMetaData) GetMaxTurns() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxTurns
}

func (o *MoveMetaData) GetMinHits() *int64 {
	if o == nil {
		return nil
	}
	return o.MinHits
}

func (o *MoveMetaData) GetMinTurns() *int64 {
	if o == nil {
		return nil
	}
	return o.MinTurns
}

func (o *MoveMetaData) GetStatChance() *int64 {
	if o == nil {
		return nil
	}
	return o.StatChance
}
