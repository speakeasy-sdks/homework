// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"homework/pkg/utils"
)

type Pokedex struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	Descriptions         []Description          `json:"descriptions"`
	ID                   int64                  `json:"id"`
	IsMainSeries         bool                   `json:"is_main_series"`
	Name                 string                 `json:"name"`
	PokemonEntries       []PokemonEntry         `json:"pokemon_entries"`
	Region               NamedAPIResource       `json:"region"`
}

func (p Pokedex) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *Pokedex) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Pokedex) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *Pokedex) GetDescriptions() []Description {
	if o == nil {
		return []Description{}
	}
	return o.Descriptions
}

func (o *Pokedex) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *Pokedex) GetIsMainSeries() bool {
	if o == nil {
		return false
	}
	return o.IsMainSeries
}

func (o *Pokedex) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Pokedex) GetPokemonEntries() []PokemonEntry {
	if o == nil {
		return []PokemonEntry{}
	}
	return o.PokemonEntries
}

func (o *Pokedex) GetRegion() NamedAPIResource {
	if o == nil {
		return NamedAPIResource{}
	}
	return o.Region
}
