// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type Encounter struct {
	// Percent chance that this encounter will occur.
	Chance *int64 `json:"chance,omitempty"`
	// The condition which triggers this encounter.
	ConditionValues []EncounterConditionValue `json:"condition_values,omitempty"`
	// The highest level the Pokémon could be encountered at.
	MaxLevel int64           `json:"max_level"`
	Method   EncounterMethod `json:"method"`
	// The lowest level the Pokémon could be encountered at.
	MinLevel int64 `json:"min_level"`
}

func (o *Encounter) GetChance() *int64 {
	if o == nil {
		return nil
	}
	return o.Chance
}

func (o *Encounter) GetConditionValues() []EncounterConditionValue {
	if o == nil {
		return nil
	}
	return o.ConditionValues
}

func (o *Encounter) GetMaxLevel() int64 {
	if o == nil {
		return 0
	}
	return o.MaxLevel
}

func (o *Encounter) GetMethod() EncounterMethod {
	if o == nil {
		return EncounterMethod{}
	}
	return o.Method
}

func (o *Encounter) GetMinLevel() int64 {
	if o == nil {
		return 0
	}
	return o.MinLevel
}
